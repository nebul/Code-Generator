{% set basic_types_mapping = {
    'int': 'ctypes.c_int',
    'float': 'ctypes.c_float',
    'double': 'ctypes.c_double',
    'char': 'ctypes.c_char',
    'string': 'ctypes.c_char_p',
    'uint8': 'ctypes.c_uint8',
    'int8': 'ctypes.c_int8',
    'uint16': 'ctypes.c_uint16',
    'int16': 'ctypes.c_int16',
    'uint32': 'ctypes.c_uint32',
    'int32': 'ctypes.c_int32',
    'uint64': 'ctypes.c_uint64',
    'int64': 'ctypes.c_int64',
    'boolean': 'ctypes.c_bool'
} %}

import ctypes

class {{ name.strip() }}(ctypes.Structure):
    _fields_ = [
{%- for attribute in attributes -%}
        {%- set ctype = basic_types_mapping.get(attribute['Type'], attribute['Type']) %}
        {%- if attribute['Multiplicity'] is not none and attribute['Multiplicity'] == attribute['Multiplicity'] %}
        ("{{ attribute['Name'].strip() }}", {{ ctype }} * {{ attribute['Multiplicity'] }}),
        {%- else %}
        ("{{ attribute['Name'].strip() }}", {{ ctype }}),
        {% endif -%}
{% endfor %}
    ]